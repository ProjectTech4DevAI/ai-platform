# Domain

# This would be set to the production domain with an env var on deployment

# used by Traefik to transmit traffic and aqcuire TLS certificates

DOMAIN=localhost

# To test the local Traefik config

# DOMAIN=localhost.tiangolo.com

# Environment: local, staging, production

ENVIRONMENT=local

PROJECT_NAME="AI Platform"
STACK_NAME=ai-platform

#Backend
SECRET_KEY=changethis
FIRST_SUPERUSER=superuser@example.com
FIRST_SUPERUSER_PASSWORD=changethis
EMAIL_TEST_USER="test@example.com"

# Postgres

POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_DB=ai_platform
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

SENTRY_DSN=

# Configure these with your own Docker registry images

DOCKER_IMAGE_BACKEND=backend
DOCKER_IMAGE_FRONTEND=frontend

# AWS

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=ap-south-1
AWS_S3_BUCKET_PREFIX="bucket-prefix-name"

# RabbitMQ Configuration (Celery Broker)
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/

# Redis Configuration (Celery Result Backend)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Celery Configuration
# Leave CELERY_WORKER_CONCURRENCY empty to auto-detect CPU cores, or set to specific number (e.g., number_of_cores * 2)
CELERY_WORKER_CONCURRENCY=
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000
CELERY_WORKER_MAX_MEMORY_PER_CHILD=200000
CELERY_TASK_SOFT_TIME_LIMIT=300
CELERY_TASK_TIME_LIMIT=600
CELERY_TASK_MAX_RETRIES=3
CELERY_TASK_DEFAULT_RETRY_DELAY=60
CELERY_RESULT_EXPIRES=3600
CELERY_BROKER_POOL_LIMIT=10
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_ENABLE_UTC=true
# India Standard Time (UTC+05:30)
CELERY_TIMEZONE=Asia/Kolkata
