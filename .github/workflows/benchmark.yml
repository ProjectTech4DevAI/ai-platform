name: RAG Benchmark

run-name: RAG Benchmark by ${{ github.actor }}

on:
  workflow_dispatch:

jobs:
  benchmark:
    environment: main

    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [assistants, responses]
        dataset: [kunji, sneha]
        count: [10]

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGFUSE_PUBLIC_KEY: ${{ secrets.LANGFUSE_PUBLIC_KEY }}
      LANGFUSE_SECRET_KEY: ${{ secrets.LANGFUSE_SECRET_KEY }}
      LANGFUSE_HOST: ${{ secrets.LANGFUSE_HOST }}
      LOCAL_CREDENTIALS_ORG_OPENAI_API_KEY: ${{ secrets.LOCAL_CREDENTIALS_ORG_OPENAI_API_KEY }}
      LOCAL_CREDENTIALS_API_KEY: ${{ secrets.LOCAL_CREDENTIALS_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: |
          cp .env.example .env
          sed -i 's/changethis/secret123/g' .env

      - name: Run server
        run: |
          docker compose up -d
          sleep 20

      - name: prestart logs on failure
        if: failure()
        run: |
          docker compose logs -f prestart
          exit 1

      - name: Create local credentials
        run: |
          curl -X POST "http://localhost:8000/api/v1/credentials/" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: ${{ env.LOCAL_CREDENTIALS_API_KEY }}" \
            -d '{
              "organization_id": 1,
              "project_id": 1,
              "is_active": true,
              "credential": {
                "openai": {
                  "api_key": "${{ env.LOCAL_CREDENTIALS_ORG_OPENAI_API_KEY }}"
                }
              }
            }'

      - name: Run benchmark
        run: |
          docker compose exec backend uv run ai-cli bench ${{ matrix.service }} --dataset ${{ matrix.dataset }} --count ${{ matrix.count }}
          docker compose cp backend:/app/bench_results_*.csv ./
          LATEST_BENCH=$(ls -t bench_results_*.csv | head -n1)
          cp $LATEST_BENCH bench-${{ matrix.service }}-${{ matrix.dataset }}-${{ matrix.count }}.csv
          ls -l bench-${{ matrix.service }}-${{ matrix.dataset }}-${{ matrix.count }}.csv

      - name: backend logs on failure
        if: failure()
        timeout-minutes: 2
        run: |
          docker compose logs -f backend
          exit 1

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: bench-${{ matrix.service }}-${{ matrix.dataset }}-${{ matrix.count }}.csv
          path: bench-${{ matrix.service }}-${{ matrix.dataset }}-${{ matrix.count }}.csv

      - name: Cleanup
        if: always()
        run: docker compose down
