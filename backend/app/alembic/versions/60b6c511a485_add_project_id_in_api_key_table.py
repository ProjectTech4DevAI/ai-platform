"""Add project_id in api_key table

Revision ID: 60b6c511a485
Revises: 904ed70e7dab
Create Date: 2025-06-10 13:22:59.947971

"""
from alembic import op
import sqlalchemy as sa
from sqlmodel import text


# revision identifiers, used by Alembic.
revision = "60b6c511a485"
down_revision = "904ed70e7dab"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("apikey", sa.Column("project_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        None, "apikey", "project", ["project_id"], ["id"], ondelete="CASCADE"
    )

    # 2. Bind engine to run raw SQL
    conn = op.get_bind()

    # 3. Populate project_id based on default logic (e.g., min project id per org)
    conn.execute(
        text(
            """
        UPDATE apikey
        SET project_id = (
            SELECT id FROM project
            WHERE project.organization_id = apikey.organization_id
            ORDER BY id ASC
            LIMIT 1
        )
    """
        )
    )

    # 4. Alter column to be NOT NULL now that itâ€™s populated
    op.alter_column("apikey", "project_id", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "apikey", type_="foreignkey")
    op.drop_column("apikey", "project_id")
    # ### end Alembic commands ###
