"""add fk constraint to user id columns

Revision ID: 8e7dc5eab0b0
Revises: 66abc97f3782
Create Date: 2025-06-16 11:08:46.893642

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = "8e7dc5eab0b0"
down_revision = "66abc97f3782"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("apikey", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_foreign_key(
        None, "apikey", "user", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column(
        "collection", "owner_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.create_foreign_key(
        None, "collection", "user", ["owner_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column("document", "owner_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_foreign_key(
        None, "document", "user", ["owner_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column(
        "projectuser", "user_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.create_foreign_key(
        None, "projectuser", "user", ["user_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "projectuser", type_="foreignkey")
    op.alter_column("projectuser", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "document", type_="foreignkey")
    op.alter_column("document", "owner_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "collection", type_="foreignkey")
    op.alter_column("collection", "owner_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "apikey", type_="foreignkey")
    op.alter_column("apikey", "user_id", existing_type=sa.INTEGER(), nullable=True)
    # ### end Alembic commands ###
