"""Refactor API key table

Revision ID: d209cddac1fa
Revises: c6fb6d0b5897
Create Date: 2025-10-03 11:35:13.012517

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = "d209cddac1fa"
down_revision = "c6fb6d0b5897"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "apikey",
        sa.Column("key_prefix", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "apikey",
        sa.Column("key_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )

    op.add_column("apikey", sa.Column("new_id", sa.Uuid(), nullable=True))
    op.execute("CREATE EXTENSION IF NOT EXISTS pgcrypto;")
    op.execute("UPDATE apikey SET new_id = gen_random_uuid();")

    # Replace old PK
    op.drop_constraint("apikey_pkey", "apikey", type_="primary")
    op.drop_column("apikey", "id")
    op.alter_column("apikey", "new_id", new_column_name="id", nullable=False)
    op.create_primary_key("apikey_pkey", "apikey", ["id"])

    op.drop_index("ix_apikey_key", table_name="apikey")
    op.create_index(op.f("ix_apikey_key_prefix"), "apikey", ["key_prefix"], unique=True)
    op.drop_column("apikey", "key")
    # ### end Alembic commands ###


def downgrade():
    pass
