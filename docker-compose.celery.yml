version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  celery-worker:
    build:
      context: .
      dockerfile: celery/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ENVIRONMENT=development
    volumes:
      - ./backend/app:/app/app
      - celery_logs:/app/logs
    command: python -m celery -A app.celery.celery_app worker --loglevel=info --concurrency=4
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: celery/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      celery-worker:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ENVIRONMENT=development
    volumes:
      - ./backend/app:/app/app
      - celery_logs:/app/logs
    command: python -m celery -A app.celery.celery_app beat --loglevel=info
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: celery/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    ports:
      - "5555:5555"
    volumes:
      - ./backend/app:/app/app
    command: python -m celery -A app.celery.celery_app flower --port=5555
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:
  celery_logs:
